name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        repository: NVIDIA/stdexec
        ref: 9428f3570b7778a3b60659ea5dfec0d2447e7ca7
        path: stdexec

    - name: Configure stdexec
      run: cmake -B ${{github.workspace}}/stdexec-build -S ${{github.workspace}}/stdexec -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/stdexec-install

    - name: Install stdexec
      run: cmake --install ${{github.workspace}}/stdexec-build

    - uses: actions/checkout@v3
      with:
        repository: catchorg/Catch2
        path: catch2
        ref: v2.13.6

    - name: Configure Catch2
      run: cmake -B ${{github.workspace}}/catch2-build -S ${{github.workspace}}/catch2 -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/catch2-install -DBUILD_TESTING=OFF

    - name: Build Catch2
      run: cmake --build ${{github.workspace}}/catch2-build --parallel 4

    - name: Install Catch2
      run: cmake --install ${{github.workspace}}/catch2-build

    - uses: actions/checkout@v3
      with:
        path: sio

    - name: Configure sio
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}}/sio -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -Dstdexec_DIR=${{github.workspace}}/stdexec-install/lib/cmake/stdexec -DCatch2_DIR=${{github.workspace}}/catch2-install/lib/cmake/Catch2

    - name: Build sio
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test sio
      working-directory: ${{github.workspace}}/build/tests
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --build-config ${{env.BUILD_TYPE}} --output-on-failure

